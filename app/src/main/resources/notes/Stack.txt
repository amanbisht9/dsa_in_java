In Java, a Stack is a data structure that follows the Last In, First Out (LIFO) principle, 
meaning the last element added is the first to be removed. Imagine stacking plates: the last 
plate you put on the stack is the first one you take off. Stacks are commonly used in scenarios 
where you need to keep track of items in a "reverse" order, such as undo operations in text editors, 
function calls in recursion, and expression evaluation.

A stack primarily supports the following operations:

Push: Adds an element to the top of the stack.
Pop: Removes the top element from the stack.
Peek: Looks at the top element without removing it.
isEmpty: Checks if the stack is empty.

Java has a built-in Stack class in the java.util package, but it's often recommended to use 
Deque (Double-Ended Queue) implementations, such as ArrayDeque or LinkedList, for better 
performance and flexibility.